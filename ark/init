#!/usr/bin/env python

import logging
import time

import boto3

REGION_NAME = 'ap-northeast-1'


class ArkServer(object):

    def __init__(self):
        self._ec2 = boto3.resource('ec2', region_name=REGION_NAME)
        self._client = boto3.client('ec2', region_name=REGION_NAME)
        with open('/var/lib/cloud/data/instance-id') as f:
            instance_id = f.read().strip()
            self._instance = self._ec2.Instance(instance_id)

    def process_tags(self):
        for tag in self._instance.tags:
            if tag['Key'] == 'kiyoya:ec2:allocation-id':
                allocation_id = tag['Value']
                self.check_allocation(allocation_id)
            elif tag['Key'].startswith('kiyoya:ec2:block-device:'):
                device_name = tag['Key'].replace('kiyoya:ec2:block-device:', '/dev/')
                volume_id = tag['Value']
                self.check_volume(volume_id, device_name)

    def check_allocation(self, allocation_id):
        vpc_address = self._ec2.VpcAddress(allocation_id)
        if vpc_address.instance_id == self._instance.id:
            return
        vpc_address.associate(InstanceId=self._instance.id)

    def check_volume(self, volume_id, device_name):
        volume = self._ec2.Volume(volume_id)
        for attachment in volume.attachments:
            if attachment['InstanceId'] == self._instance.id:
                break
        else:
            if volume.attachments:
                for i in range(6):
                    time.sleep(10)
                    if not volume.attachments:
                        break
            volume.attach_to_instance(
                    InstanceId=self._instance.id,
                    Device=device_name)
        for i in range(6):
            if volume.state == 'attached' or volume.state == 'in-use':
                return
            if volume.state != 'attaching':
                raise ValueError('%s: %s' % (volume, volume.state))
            time.sleep(10)


if __name__ == '__main__':
    ark = ArkServer()
    print('Instance: %s' % ark._instance)
    ark.process_tags()
