#!/bin/bash
# @(#) Script to maintain the AWS container.
set -eu

source "$(dirname $0)"/../bootstrap.sh

DATADIR="${DATADIR:-${HOME}/.aws}"

NAME="${NAME:-aws}"
REPO="${IMAGE:-kiyoya/aws}"
TAG="${TAG:-latest}"

BUILD_TAG="${BUILD_TAG:-devel}"
BUILD_NAME="${BUILD_NAME:-build-"${NAME}"-"${BUILD_TAG}"}"

PACKAGES="
		=dev-lang/python-2*
		dev-python/pip
		sys-apps/groff"


case "${1:-}" in
aws)
	docker run -it --rm \
		-h "${NAME}" \
		--log-driver none \
		--user "$(id -u)":"$(id -g)" \
		-v "$(volumepath "${DATADIR}")":/.aws \
		-w /.aws \
		"${REPO}":"${TAG}" aws "${@:2}"
	;;
build)
	bootstrap_create "${BUILD_NAME}"
	bootstrap_emerge "${BUILD_NAME}" --update ${PACKAGES}
	bootstrap_shell_chroot "${BUILD_NAME}" <<-EOM
		set -eu
		pip install awscli boto3
	EOM
	bootstrap_build "${BUILD_NAME}" "${REPO}":"${BUILD_TAG}"
	;;
promote)
	docker_promote "${REPO}":"${BUILD_TAG}"
	;;
run)
	docker run -i --rm \
		-h "${NAME}" \
		--log-driver none \
		--user "$(id -u)":"$(id -g)" \
		-v "$(volumepath "${DATADIR}")":/.aws \
		-w /.aws \
		"${REPO}":"${TAG}" "${@:2}"
	;;
*)
	echo "usage: $0 [ aws | build | promote | run ]" 1>&2
	exit 1
	;;
esac
